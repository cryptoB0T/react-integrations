[
  {
    "constant": false,
    "inputs": [
      {
        "name": "_myBitFoundationPercentage",
        "type": "uint256"
      },
      {
        "name": "_stakedTokenPercentage",
        "type": "uint256"
      },
      {
        "name": "_installerPercentage",
        "type": "uint256"
      },
      {
        "name": "_functionSigner",
        "type": "address"
      }
    ],
    "name": "changeFundingPercentages",
    "outputs": [
      {
        "name": "",
        "type": "bool"
      }
    ],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "database",
    "outputs": [
      {
        "name": "",
        "type": "address"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_newTimeGivenForFunding",
        "type": "uint256"
      }
    ],
    "name": "changeFundingTime",
    "outputs": [
      {
        "name": "",
        "type": "bool"
      }
    ],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "fundingTime",
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_storageHash",
        "type": "bytes32"
      },
      {
        "name": "_amountToBeRaised",
        "type": "uint256"
      },
      {
        "name": "_managerPercentage",
        "type": "uint256"
      },
      {
        "name": "_installerID",
        "type": "bytes32"
      },
      {
        "name": "_assetType",
        "type": "bytes32"
      }
    ],
    "name": "newAsset",
    "outputs": [
      {
        "name": "",
        "type": "bool"
      }
    ],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_assetID",
        "type": "bytes32"
      },
      {
        "name": "_functionSigner",
        "type": "address"
      }
    ],
    "name": "removeAsset",
    "outputs": [
      {
        "name": "",
        "type": "bool"
      }
    ],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "name": "_database",
        "type": "address"
      }
    ],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "name": "_creator",
        "type": "address"
      },
      {
        "indexed": true,
        "name": "_assetLocation",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "name": "_assetType",
        "type": "bytes32"
      }
    ],
    "name": "LogAssetFundingStarted",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "name": "_storageHash",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "name": "_installerID",
        "type": "bytes32"
      }
    ],
    "name": "LogAssetInfo",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "name": "_remover",
        "type": "address"
      },
      {
        "indexed": true,
        "name": "_id",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "name": "_timestamp",
        "type": "uint256"
      }
    ],
    "name": "LogAssetRemoved",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "name": "_sender",
        "type": "address"
      },
      {
        "indexed": false,
        "name": "_newTimeForFunding",
        "type": "uint256"
      },
      {
        "indexed": false,
        "name": "_blockTimestamp",
        "type": "uint256"
      }
    ],
    "name": "LogFundingTimeChanged",
    "type": "event"
  }
]
