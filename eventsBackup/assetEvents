constructor(props) {
  super(props)
  this.state = {
    web3:null,
    database:null,
    instance:null,
    LogSharesTraded:null,
    LogDestruction:null,
    LogIncomeReceived:null,
    LogInvestmentPaid:null,
    LogInvestmentPaidToWithdrawalAddress:null,
    LogAssetNote:null,
  }


const LogSharesTraded = instance.LogSharesTraded({},{fromBlock: 0, toBlock: 'latest'});
const LogDestruction = instance.LogDestruction({},{fromBlock: 0, toBlock: 'latest'});
const LogIncomeReceived = instance.LogIncomeReceived({},{fromBlock: 0, toBlock: 'latest'});
const LogInvestmentPaid = instance.LogInvestmentPaid({},{fromBlock: 0, toBlock: 'latest'});
const LogInvestmentPaidToWithdrawalAddress = instance.LogInvestmentPaidToWithdrawalAddress({},{fromBlock: 0, toBlock: 'latest'});
const LogAssetNote = instance.LogAssetNote({},{fromBlock: 0, toBlock: 'latest'});

this.setState({ web3: web3, database: database, instance: instance, LogSharesTraded : LogSharesTraded,
LogDestruction : LogDestruction, LogIncomeReceived : LogIncomeReceived,
LogInvestmentPaid : LogInvestmentPaid, LogInvestmentPaidToWithdrawalAddress:
LogInvestmentPaidToWithdrawalAddress, LogAssetNote : LogAssetNote,  });

      { /*Store these in bigchainDB*/}
      this.LogSharesTraded.watch(function(e,r){
        if(!e){
          var eventInfo = this.getEventInfo(r);
          var _assetID = r._assetID;
          var _from = r._from;
          var _to = r._to;
          var _timestamp = r._timestamp;
        }
      });

      { /*Store these in bigchainDB*/}
      this.LogDestruction.watch(function(e,r){
        if(!e){
          var eventInfo = this.getEventInfo(r);
          var _locationSent = r._locationSent;
          var _amountSent = r._amountSent;
          var _caller = r._caller;
          }
      });

      { /*Store these in bigchainDB*/}
      this.LogIncomeReceived.watch(function(e,r){
        if(!e){
          var eventInfo = this.getEventInfo(r);
          var _sender = r._sender;
          var _amount = r._amount;
          var _assetID = r._assetID;
        }
      });

      { /*Store these in bigchainDB*/}
      this.LogInvestmentPaid.watch(function(e,r){
        if(!e){
          var eventInfo = this.getEventInfo(r);
          var _funder = r._funder;
          var _amount = r._amount;
          var _timestamp = r._timestamp;
        }
      });

      { /*Store these in bigchainDB*/}
      this.LogInvestmentPaidToWithdrawalAddress.watch(function(e,r){
        if(!e){
          var eventInfo = this.getEventInfo(r);
          var _funder = r._funder;
          var _withdrawalAddress = r._withdrawalAddress;
          var _amount = r._amount;
          var _timestamp = r._timestamp;
        }
      });

      { /*Store these in bigchainDB*/}
      this.LogAssetNote.watch(function(e,r){
        if(!e){
          var eventInfo = this.getEventInfo(r);
          var _note = r._note;
          var _timestamp = r._timestamp;
        }
      });
